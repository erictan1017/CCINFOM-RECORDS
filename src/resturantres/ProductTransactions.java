/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package resturantres;

import RR_Assets.MyConnection;
import java.sql.*;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author PC
 */
public class ProductTransactions extends javax.swing.JFrame {
    private ArrayList<String> existingProductPKs;

    /**
     * Creates new form ProductTransactions
     */
    public ProductTransactions() {
        existingProductPKs = new ArrayList<>();
        initComponents();
        setLocationRelativeTo(null);
    }
    public ArrayList<String> getExistingProductIDs(){
        try{
            Connection con = MyConnection.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select product_ID from products");
            while(rs.next()){
                String checker = rs.getString("product_ID");
                for(int i=0; i<this.existingProductPKs.size(); i++){
                    if(checker.equals(this.existingProductPKs.get(i))){
                        break;
                    }
                }
                this.existingProductPKs.add(checker);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        return this.existingProductPKs;
    }
    private int fieldChecker(String actionType) {
        if (actionType.equals("Update") && (prodNameTransactionTxt.getText().equals("") || prodPriceTransactionTxt.getText().equals("") || prodQuantityTransactionTxt.getText().equals(""))) {
            return 1;
        } else if (actionType.equals("Save") && (prodIDTransactionTxt.getText().equals("") || prodNameTransactionTxt.getText().equals("") || prodPriceTransactionTxt.getText().equals("") || prodQuantityTransactionTxt.getText().equals(""))) {
            return 2;
        } else {
            getExistingProductIDs();
            for(int i=0; i<this.existingProductPKs.size(); i++){
                if(prodIDTransactionTxt.getText().equals(this.existingProductPKs.get(i)))
                    return 3;
            }
            return 4;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTransactionTable = new javax.swing.JTable();
        prodIDTransactionLbl = new javax.swing.JLabel();
        prodTransactionUpdatebtn = new javax.swing.JButton();
        prodQuantityTransactionLbl = new javax.swing.JLabel();
        prodIDTransactionTxt = new javax.swing.JTextField();
        prodQuantityTransactionTxt = new javax.swing.JTextField();
        endTransactionbtn = new javax.swing.JButton();
        prodTransactionSavebtn = new javax.swing.JButton();
        prodTransactionDeletebtn = new javax.swing.JButton();
        prodNameTransactionLbl = new javax.swing.JLabel();
        prodPriceTransactionLbl = new javax.swing.JLabel();
        prodPriceTransactionTxt = new javax.swing.JTextField();
        prodNameTransactionTxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Book", 1, 24)); // NOI18N
        jLabel1.setText("Product Transactions");

        productTransactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "name", "price", "quantity"
            }
        ));
        productTransactionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTransactionTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(productTransactionTable);

        prodIDTransactionLbl.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        prodIDTransactionLbl.setText("ID");

        prodTransactionUpdatebtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        prodTransactionUpdatebtn.setText("Update");
        prodTransactionUpdatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodTransactionUpdatebtnActionPerformed(evt);
            }
        });

        prodQuantityTransactionLbl.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        prodQuantityTransactionLbl.setText("Quantity");

        prodIDTransactionTxt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        prodQuantityTransactionTxt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        endTransactionbtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        endTransactionbtn.setText("End Transaction");
        endTransactionbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endTransactionbtnActionPerformed(evt);
            }
        });

        prodTransactionSavebtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        prodTransactionSavebtn.setText("Save");
        prodTransactionSavebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodTransactionSavebtnActionPerformed(evt);
            }
        });

        prodTransactionDeletebtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        prodTransactionDeletebtn.setText("Delete");

        prodNameTransactionLbl.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        prodNameTransactionLbl.setText("Name");

        prodPriceTransactionLbl.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        prodPriceTransactionLbl.setText("Price");

        prodPriceTransactionTxt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        prodNameTransactionTxt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(294, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(279, 279, 279))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(prodIDTransactionLbl)
                                    .addComponent(prodIDTransactionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(prodQuantityTransactionLbl)
                                    .addComponent(prodQuantityTransactionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(prodNameTransactionLbl)
                                    .addComponent(prodNameTransactionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(prodPriceTransactionLbl)
                                    .addComponent(prodPriceTransactionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(prodTransactionSavebtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(prodTransactionUpdatebtn)
                                    .addGap(3, 3, 3)
                                    .addComponent(prodTransactionDeletebtn))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(endTransactionbtn)
                                    .addGap(50, 50, 50)))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(prodNameTransactionLbl)
                                .addComponent(prodIDTransactionLbl))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(prodNameTransactionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(prodIDTransactionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(prodPriceTransactionLbl)
                                .addGap(18, 18, 18)
                                .addComponent(prodPriceTransactionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(prodQuantityTransactionLbl)
                                .addGap(18, 18, 18)
                                .addComponent(prodQuantityTransactionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prodTransactionUpdatebtn)
                            .addComponent(prodTransactionDeletebtn)
                            .addComponent(prodTransactionSavebtn))
                        .addGap(18, 18, 18)
                        .addComponent(endTransactionbtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void prodTransactionUpdatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodTransactionUpdatebtnActionPerformed
        // TODO add your handling code here:
        String ID = prodIDTransactionTxt.getText();
        String quantity = prodQuantityTransactionTxt.getText();
        if(quantity.equals("")){
            JOptionPane.showMessageDialog(null, "All necessary fields must be inputted.");
        }
        else{
            try {
                Connection con = MyConnection.getCon();
                PreparedStatement ps = con.prepareStatement("update products set product_quantity=? where product_ID=?");
                ps.setString(1, quantity);
                ps.setString(2, ID);
                ps.executeUpdate();
                getExistingProductIDs();
                JOptionPane.showMessageDialog(null, "Product has been successfully updated.");
                setVisible(false);
                new ProductTransactions().setVisible(true);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_prodTransactionUpdatebtnActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) productTransactionTable.getModel();
        try {
            Connection con = MyConnection.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from products");
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("product_ID"), rs.getString("product_name"), rs.getString("product_price"), rs.getString("product_quantity")});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formComponentShown

    private void productTransactionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTransactionTableMouseClicked
        // TODO add your handling code here:
        getExistingProductIDs();
        int index = productTransactionTable.getSelectedRow();
        TableModel model = productTransactionTable.getModel();

        String id = model.getValueAt(index, 0).toString();
        prodIDTransactionTxt.setText(id);


        String quantity = model.getValueAt(index, 3).toString();
        prodQuantityTransactionTxt.setText(quantity);
        
        prodIDTransactionTxt.setEditable(false);
        prodNameTransactionTxt.setEditable(false);
        prodPriceTransactionTxt.setEditable(false);
        prodTransactionSavebtn.setEnabled(false);
        prodTransactionUpdatebtn.setEnabled(true);
    }//GEN-LAST:event_productTransactionTableMouseClicked

    private void prodTransactionSavebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodTransactionSavebtnActionPerformed
        // TODO add your handling code here:
        String ID = prodIDTransactionTxt.getText();
        String name = prodNameTransactionTxt.getText();
        String price = prodPriceTransactionTxt.getText();
        String quantity = prodQuantityTransactionTxt.getText();
        if (fieldChecker("Save") == 2){
            JOptionPane.showMessageDialog(null, "All fields must be inputted.");
        } 
        else if(fieldChecker("Save") == 3){
            JOptionPane.showMessageDialog(null, "Repeating product_IDs are not allowed.");
        } 
        else {
            try {
                Connection con = MyConnection.getCon();
                PreparedStatement ps = con.prepareStatement("insert into products (product_ID, product_name, product_price, product_quantity) values(?,?,?,?)");
                ps.setString(1, ID);
                ps.setString(2, name);
                ps.setString(3, price);
                ps.setString(4, quantity);
                ps.executeUpdate();
                this.getExistingProductIDs();
                JOptionPane.showMessageDialog(null, "Product has been successfully added.");
                setVisible(false);
                new ProductTransactions().setVisible(true);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_prodTransactionSavebtnActionPerformed

    private void endTransactionbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endTransactionbtnActionPerformed
        // TODO add your handling code here:
        JOptionPane.showConfirmDialog(null, "Are you sure you want to end the transaction?");
        setVisible(false);
        new ManageInventory().setVisible(true);
    }//GEN-LAST:event_endTransactionbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductTransactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductTransactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductTransactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductTransactions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductTransactions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton endTransactionbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel prodIDTransactionLbl;
    private javax.swing.JTextField prodIDTransactionTxt;
    private javax.swing.JLabel prodNameTransactionLbl;
    private javax.swing.JTextField prodNameTransactionTxt;
    private javax.swing.JLabel prodPriceTransactionLbl;
    private javax.swing.JTextField prodPriceTransactionTxt;
    private javax.swing.JLabel prodQuantityTransactionLbl;
    private javax.swing.JTextField prodQuantityTransactionTxt;
    private javax.swing.JButton prodTransactionDeletebtn;
    private javax.swing.JButton prodTransactionSavebtn;
    private javax.swing.JButton prodTransactionUpdatebtn;
    private javax.swing.JTable productTransactionTable;
    // End of variables declaration//GEN-END:variables
}
