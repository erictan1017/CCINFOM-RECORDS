/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package restaurantres;

import RR_Assets.MyConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AP-COOP
 */
public class SalaryReport extends javax.swing.JFrame {
    
    private final ArrayList<String> existingSID;

    /**
     * Creates new form SalaryReport
     */
    public SalaryReport() {
        initComponents();
        existingSID = new ArrayList<>();
        
        getExistingSID();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        salaryReport = new javax.swing.JLabel();
        staffs = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        staffTable = new javax.swing.JTable();
        gReportButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        statusTable = new javax.swing.JTable();
        closeButton = new javax.swing.JButton();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(300, 300));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        salaryReport.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 24)); // NOI18N
        salaryReport.setText("Salary Report");
        getContentPane().add(salaryReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, -1, -1));

        staffs.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 18)); // NOI18N
        staffs.setText("Staffs");
        getContentPane().add(staffs, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        staffTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "staff_ID", "name", "age", "working_Day", "salary"
            }
        ));
        jScrollPane1.setViewportView(staffTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, 230));

        gReportButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        gReportButton.setText("Generate Report");
        gReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gReportButtonActionPerformed(evt);
            }
        });
        getContentPane().add(gReportButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, -1, -1));

        statusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status"
            }
        ));
        jScrollPane2.setViewportView(statusTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, 100, 230));

        closeButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(closeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 350, -1, -1));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1920x1080-bright-lavender-solid-color-background.jpg"))); // NOI18N
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 800, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private ArrayList<String> getExistingSID(){
        try{
            Connection con = MyConnection.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select staff_ID from staffs");
            int i;
            while(rs.next()){
                String checker = rs.getString("staff_ID");
                for(i=0; i<this.existingSID.size(); i++){
                    if(checker.equals(this.existingSID.get(i))){
                        break;
                    }
                }
                if(i == this.existingSID.size())
                    this.existingSID.add(checker);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        return this.existingSID;
    }
    
    public int adjustSalary(String staffID) {
        int result = 2; // Default to "maintain" (2)
        try {
            Connection con = MyConnection.getCon();

            // Count the number of reservations handled by the staff
            PreparedStatement countPs = con.prepareStatement("SELECT COUNT(reservation_ID) AS reservationCount FROM reservations WHERE staff_ID = ?");
            countPs.setString(1, staffID);
            ResultSet countRs = countPs.executeQuery();

            int reservationCount = 0;

            if (countRs.next()) {
                reservationCount = countRs.getInt("reservationCount");
            } else {
                JOptionPane.showMessageDialog(null, "No reservations found for Staff ID: " + staffID);
                countRs.close();
                countPs.close();
                con.close();
                return result; // Default "maintain"
            }
            
            // Determine the result based on the reservation count
            if (reservationCount < 20) {
                result = 1; // Decrease
            } else if (reservationCount >= 20 && reservationCount < 30) {
                result = 2; // Maintain
            } else {
                result = 3; // Increase
            }
            
            // Close resources
            countRs.close();
            countPs.close();
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        return result;
    }
 
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        DefaultTableModel staff = (DefaultTableModel)staffTable.getModel();
        
        staff.setRowCount(0);
 
        try {
            Connection con = MyConnection.getCon();
            Statement st1 = con.createStatement();

            ResultSet rs1 = st1.executeQuery("select * from staffs");
            while (rs1.next()) {
                staff.addRow(new Object[]{rs1.getString("staff_ID"), rs1.getString("name"), rs1.getString("age"), rs1.getString("working_Day"), rs1.getString("salary")});     
            }
            rs1.close();
        
            st1.close();      
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formComponentShown

    private void gReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gReportButtonActionPerformed
        // TODO add your handling code here:
        try {
            Connection con = MyConnection.getCon();

            PreparedStatement ps = con.prepareStatement("SELECT staff_ID FROM staffs ORDER BY staff_ID ASC");
            ResultSet rs = ps.executeQuery();
    
            DefaultTableModel model = (DefaultTableModel) statusTable.getModel();
            model.setRowCount(0); 

            while (rs.next()) {
                String staffID = rs.getString("staff_ID");
  
                int statusCode = adjustSalary(staffID);

                String statusDescription;
                switch (statusCode) {
                    case 1:
                        statusDescription = "Decreased";
                    break;
                    case 2:
                        statusDescription = "Maintained";
                        break;
                    case 3:
                        statusDescription = "Increased";
                        break;
                    default:
                        statusDescription = "Unknown";
                }
  
                model.addRow(new Object[]{statusDescription});
            }
   
            rs.close();
            ps.close();
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_gReportButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalaryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalaryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalaryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalaryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalaryReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton gReportButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel salaryReport;
    private javax.swing.JTable staffTable;
    private javax.swing.JLabel staffs;
    private javax.swing.JTable statusTable;
    // End of variables declaration//GEN-END:variables
}
